name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-latest] # ubuntu-latest, macos-latest
        
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # GitHub token, automatically provided to the action
          github_token: ${{ secrets.GIT_TOKEN }}
          
          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
          
          # Build for different platforms
          windows_certs: ${{ secrets.WINDOWS_CERTS }}
          windows_certs_password: ${{ secrets.WINDOWS_CERTS_PASSWORD }}
        env:
          # macOS notarization API key
          API_KEY_ID: ${{ secrets.API_KEY_ID }}
          API_KEY_ISSUER_ID: ${{ secrets.API_KEY_ISSUER_ID }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          CSC_LINK: ${{ secrets.CSC_LINK }}

  # Job for creating GitHub release
  create-release:
    runs-on: ubuntu-latest
    needs: release
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.exe
            # dist/*.dmg
            # dist/*.AppImage
            # dist/*.deb
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}