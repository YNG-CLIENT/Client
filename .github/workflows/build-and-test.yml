name: Build and Test YNG Client

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test Application
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      run: npm run lint --if-present

    - name: Run tests
      run: npm test --if-present

    - name: Check TypeScript compilation
      run: npx tsc --noEmit --skipLibCheck || echo "No TypeScript config found"

  build:
    name: Build Application
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install electron-builder
      run: npm install -g electron-builder

    - name: Build for Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        npm run build:linux || electron-builder --linux --publish=never
      env:
        GH_TOKEN: ${{ secrets.GIT_TOKEN }}

    - name: Build for Windows
      if: matrix.os == 'windows-latest'
      run: |
        npm run build:windows || electron-builder --windows --publish=never
      env:
        GH_TOKEN: ${{ secrets.GIT_TOKEN }}

    - name: Upload Linux build artifacts
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: yng-client-linux
        path: |
          dist/*.AppImage
          dist/*.deb
          dist/*.rpm
          dist/*.tar.gz
        retention-days: 30

    - name: Upload Windows build artifacts
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: yng-client-windows
        path: |
          dist/*.exe
          dist/*.msi
          dist/*.zip
        retention-days: 30


    - name: Install dependencies
      run: npm ci

    - name: Run npm audit
      run: npm audit --audit-level=moderate


  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Check code formatting
      run: npx prettier --check . || echo "No prettier config found"

    - name: Analyze code quality
      uses: github/super-linter@v5
      env:
        DEFAULT_BRANCH: main
        GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
        VALIDATE_ALL_CODEBASE: false
        VALIDATE_JAVASCRIPT_ES: true
        VALIDATE_HTML: true
        VALIDATE_CSS: true
        VALIDATE_JSON: true
        VALIDATE_MARKDOWN: true
